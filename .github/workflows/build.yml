name: Build FFmpeg

on:
  workflow_dispatch:

jobs:
  build_base:
    name: Build base image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Image Name
        id: imagename
        run: echo "::set-output name=name::docker.pkg.github.com/${GITHUB_REPOSITORY,,}/base:latest"
      - name: Pull latest
        run: docker pull ${{ steps.imagename.outputs.name }} || true
      - name: Build base image
        run: docker build --pull --cache-from ${{ steps.imagename.outputs.name }} --tag ${{ steps.imagename.outputs.name }} images/base
      - name: Push base image
        run: docker push ${{ steps.imagename.outputs.name }}
  build_target_bases:
    name: Build target base image
    needs: build_base
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [win64,win32]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Image Name
        id: imagename
        run: echo "::set-output name=name::docker.pkg.github.com/${GITHUB_REPOSITORY,,}/base-${{ matrix.target }}:latest"
      - name: Pull latest
        run: docker pull ${{ steps.imagename.outputs.name }} || true
      - name: Build target base image
        run: docker build --pull --build-arg GH_REPO=${GITHUB_REPOSITORY,,} --cache-from ${{ steps.imagename.outputs.name }} --tag ${{ steps.imagename.outputs.name }} images/base-${{ matrix.target }}
      - name: Push target base image
        run: docker push ${{ steps.imagename.outputs.name }}
  build_targets:
    name: Build target-variant image
    needs: build_target_bases
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [win64,win32]
        variant: [lgpl-shared 4.3]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate Dockerfile
        run: ./generate.sh ${{ matrix.target }} ${{ matrix.variant }}
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Image Name
        id: imagename
        run: |
          IMG="docker.pkg.github.com/${GITHUB_REPOSITORY,,}/${{ matrix.target }}-${{ matrix.variant }}:latest"
          echo "::set-output name=name::${IMG/ /-}"
      - name: Pull latest
        run: docker pull ${{ steps.imagename.outputs.name }} || true
      - name: Build variant image
        run: docker build --pull --cache-from ${{ steps.imagename.outputs.name }} --tag ${{ steps.imagename.outputs.name }} .
      - name: Push variant image
        run: docker push ${{ steps.imagename.outputs.name }}
  build_ffmpeg:
    name: Build ffmpeg
    needs: build_targets
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [win64,win32]
        variant: [lgpl-shared 4.3]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Build ffmpeg
        run: ./build.sh ${{ matrix.target }} ${{ matrix.variant }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ffmpeg
          path: artifacts/*
